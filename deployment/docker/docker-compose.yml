version: '3.5'
services:
  vmagent:
    container_name: vmagent
    image: victoriametrics/vmagent
    depends_on:
      - "victoriametrics"
        #ports:
        #- 8429:8429
    volumes:
      - vmagentdata:/vmagentdata
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--promscrape.config=/etc/prometheus/prometheus.yml'
      - '--remoteWrite.url=http://victoriametrics:8428/api/v1/write'
    networks:
      - vm_net
      - backends
    restart: always
  victoriametrics:
    container_name: victoriametrics
    image: victoriametrics/victoria-metrics
      #    ports:
      #- 8428:8428
      #- 8089:8089
      #- 8089:8089/udp
      #- 2003:2003
      #- 2003:2003/udp
      #- 4242:4242
    volumes:
      - vmdata:/storage
    command:
      - '--storageDataPath=/storage'
      - '--graphiteListenAddr=:2003'
      - '--opentsdbListenAddr=:4242'
      - '--httpListenAddr=:8428'
      - '--influxListenAddr=:8089'
    networks:
      - vm_net
    restart: always
  grafana:
    container_name: grafana
    image: grafana/grafana:8.2.2
    depends_on:
      - "victoriametrics"
        #ports:
      #- 3000:3000
    volumes:
      - grafanadata:/var/lib/grafana
      - ./provisioning/:/etc/grafana/provisioning/
      - ./../../dashboards/victoriametrics.json:/var/lib/grafana/dashboards/vm.json
      - ./../../dashboards/vmagent.json:/var/lib/grafana/dashboards/vmagent.json
      - ./../../dashboards/vmalert.json:/var/lib/grafana/dashboards/vmalert.json
      - ./../../dashboards/cadvisor.json:/var/lib/grafana/dashboards/cadvisor.json
      - ./../../dashboards/node-exporter.json:/var/lib/grafana/dashboards/node-exporter.json
    networks:
      - vm_net
      - backends
    restart: always
  vmalert:
    container_name: vmalert
    image: victoriametrics/vmalert
    depends_on:
      - "victoriametrics"
      - "alertmanager"
        #ports:
      #- 8880:8880
    volumes:
      - ./alerts.yml:/etc/alerts/alerts.yml
    command:
      - '--datasource.url=http://victoriametrics:8428/'
      - '--remoteRead.url=http://victoriametrics:8428/'
      - '--remoteWrite.url=http://victoriametrics:8428/'
      - '--notifier.url=http://alertmanager:9093/'
      - '--rule=/etc/alerts/*.yml'
      # display source of alerts in grafana
      - '-external.url=http://grafana:3000' #grafana outside container
      - '--external.alert.source=explore?orgId=1&left=["now-1h","now","VictoriaMetrics",{"expr":"{{$$expr|quotesEscape|crlfEscape|queryEscape}}"},{"mode":"Metrics"},{"ui":[true,true,true,"none"]}]' ## when copypaste the line be aware of '$$' for escaping in '$expr'    networks:
    networks:
      - vm_net
    restart: always
  alertmanager:
    container_name: alertmanager
    image:  prom/alertmanager
    volumes:
      - ./alertmanager.yml:/config/alertmanager.yml
    command:
      - '--config.file=/config/alertmanager.yml'
        #ports:
        #- 9093:9093
    networks:
      - vm_net
    restart: always
  cadvisor:
    container_name: cadvisor
    #image: google/cadvisor
    #image: gcr.io/google_containers/cadvisor:v0.34.0
    image: gcr.io/cadvisor/cadvisor
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /mnt/docker/:/var/lib/docker:ro
    entrypoint:
      - "/usr/bin/cadvisor"
      - "-logtostderr"
      - "-docker_only"
    networks:
      - vm_net
    restart: always

  node-exporter:
    container_name: node-exporter
    image: prom/node-exporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - --collector.filesystem.ignored-mount-points
      - "^/(sys|proc|dev|host|etc|rootfs/mnt/docker/containers|rootfs/mnt/docker/overlay2|rootfs/run/docker/netns|rootfs/mnt/docker/aufs)($$|/)"
        #    ports:
        #      - 9100:9100
    networks:
      - vm_net
    restart: always

volumes:
  vmagentdata: {}
  vmdata: {}
  grafanadata: {}
networks:
  vm_net:
  backends:
    external: true
    name: common_backends

